<template>
  <a-modal
    :title="title"
    :width="800"
    :visible="visible"
    :confirmLoading="confirmLoading"
    :destroyOnClose="destroyOnClose"
    @ok="handleOk"
    @cancel="handleCancel"
    cancelText="关闭">
    
    <a-spin :spinning="confirmLoading">
      <a-form :form="form">
      
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="报审事项">
          <a-input placeholder="请输入报审事项" v-decorator="['bssx', {}]" :disabled="dis"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="报审人">
          <a-input placeholder="请输入报审人" v-decorator="['createByName', {}]" :disabled="dis"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="报审机构">
          <a-input placeholder="请输入机构" v-decorator="['bsjgmc', {}]" :disabled="dis"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="报审时间">
          <a-input placeholder="请输入时间" v-decorator="['createTime', {}]" :disabled="dis"/>
        </a-form-item>
        <!-- <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="合同名称">
          <a-input placeholder="请输入合同名称" v-decorator="['htmc', {}]" :disabled="dis"/>
        </a-form-item> -->
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="合同编号">
          <a-input placeholder="请输入合同编号" v-decorator="['htbh', {}]" :disabled="dis"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="相关资料">
          <a-upload-dragger
            name="file"
            :multiple="true"
            action="/jeecg-boot/sys/common/upload?zjhm=flwjsb"
            :data="{'isup':1}"
            :defaultFileList="defaultFileList"
            @change="handleChange"
            :disabled="dis"
          >
            <p class="ant-upload-drag-icon">
              <a-icon type="inbox" />
            </p>
            <p class="ant-upload-text">点击或拖拽文件到该区域上传</p>
            <p class="ant-upload-hint">
              支持多文件选择
            </p>
          </a-upload-dragger>
        </a-form-item>

        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="合同主要条款">
          <a-textarea
            placeholder
            :autosize="{ minRows: 8, maxRows: 6 }"
            v-decorator="['htzytk', {}]"
          />
        </a-form-item>

        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="合规审查原则">
          <a-textarea
            placeholder
            :autosize="{ minRows: 8, maxRows: 6 }"
            v-decorator="['hgscyz', {}]"
          />
        </a-form-item>
        <a-form-item :labelCol="labelCol" :wrapperCol="wrapperCol" label="审查建议">
          <a-textarea
            placeholder
            :autosize="{ minRows: 8, maxRows: 6 }"
            v-decorator="['scjy', {}]"
          />
        </a-form-item>
      </a-form>
    </a-spin>
  </a-modal>
</template>

<script>
  import { httpAction ,downFile} from '@/api/manage'
  import pick from 'lodash.pick'
  import moment from "moment"

  export default {
    name: "FlwjsbModal",
    data () {
      return {
        defaultFileList:[],
        destroyOnClose:true,
        quxiao:false,
        dis:"disabled",
        title:"操作",
        visible: false,
        model: {},
        labelCol: {
          xs: { span: 24 },
          sm: { span: 5 },
        },
        wrapperCol: {
          xs: { span: 24 },
          sm: { span: 16 },
        },

        confirmLoading: false,
        fileList: [], //上传文件列表
      fileUpload: window._CONFIG['domianURL'] + '/sys/common/upload', //上传图片地址
      imgurl: window._CONFIG['domianURL'] + '/',
        form: this.$form.createForm(this),
        validatorRules:{
        },
        url: {
          add: "/hg2/flwjsb/add",
          edit: "/hg2/flwjsb/edit",
        },
      }
    },
    created () {
    },
    methods: {
      _xiazai(e,fileName){
        alert(e)
       /* 导出 */
       let param = {};
       downFile(e,param).then((data)=>{
        if (!data) {
          this.$message.warning("文件下载失败")
          return
        }
        if (typeof window.navigator.msSaveBlob !== 'undefined') {
          window.navigator.msSaveBlob(new Blob([data]), fileName)
        }else{
          let url = window.URL.createObjectURL(new Blob([data]))
          let link = document.createElement('a')
          link.style.display = 'none'
          link.href = url
          link.setAttribute('download', fileName)
          document.body.appendChild(link)
          link.click()
          document.body.removeChild(link); //下载完成移除元素
          window.URL.revokeObjectURL(url); //释放掉blob对象
        }
      })
      // window.location.href = e;
    },
      //获取上传文件
    getWenJian(record) {
      if (record.xgzl == '' || record.xgzl == null) {
        this.fileList = []
        return
      }
      let shuzu = record.xgzl.split(',')
      // console.log(shuzu)
      this.fileList = []
      for (let i = 0; i < shuzu.length; i++) {
        this.fileList.push({
          uid: i,
          status: 'done',
          name: shuzu[i].split('/')[2],
          response:{
            message: shuzu[i]
          },
          url: this.imgurl + shuzu[i]
        })
      }
      this.defaultFileList = this.fileList
    },
    //上传
    handleChange(info) {
      const status = info.file.status;
      if (status !== 'uploading') {
      }
      if (status === 'done') {
        debugger
        this.$message.success(`${info.file.name} 文件上传成功.`);
        for (let i = 0; i < info.fileList.length; i++) {
          if (info.fileList[i].response)
          {
            if(info.fileList[i].response.message)
            {
              if (info.file.response.message == info.fileList[i].response.message)
              {
                info.fileList[i].url = window._CONFIG['domianURL'] + "/" + info.file.response.message
                info.fileList[i].pathurl = info.file.response.message
                break;
              }
            }
          }

        }
      } else if (status === 'error') {
        this.$message.error(`${info.file.name} 文件上传失败.`);
      }

      this.fileList = info.fileList
    },
      add () {
        this.edit({});
        this.dis=false
      },
      edit (record) {
        if(null == record.hgscyz || ''==record.hgscyz)
        {
          record.hgscyz = '合规风险部仅审查送审文件的合法性及合规性，而不对业务和管理的可行性、可操作性、相关材料的真实性、操作风险控制及相关专业技术标准负责。'
        }
        this.dis="disabled"
        this.form.resetFields();
        this.model = Object.assign({}, record);
        this.defaultFileList = [];
        if (record.xgzl != '' && record.xgzl != null) {
          let bxfj = record.xgzl + ''
          let array = bxfj.split(',')
          for (let i = 0; i < array.length; i++) {
            if('' != array[i] && null != array[i])
            {
              this.defaultFileList.push({uid:''+i,status:'done',name:array[i],pathurl:array[i],url:window._CONFIG['domianURL'] + "/" +array[i]})
            }
          }
        }
        this.fileList = this.defaultFileList;
        this.visible = true;
        this.$nextTick(() => {
          this.form.setFieldsValue(pick(this.model,'bssx','scmd','scyq','qtbj','xgzl','htmc','htbh','htzytk','hgscyz','scjy','createTime','createByName','bsjgmc'))
		  //时间格式化
        });

      },
      close () {
        this.$emit('close');
        this.visible = false;
      },
      handleOk () {
        if (this.title == '查看')
        {
          this.close();
          return;
        }

        let wenjian = ''
        let dz = ''
        for (let i = 0; i < this.fileList.length; i++) {

          if(this.fileList[i].response != null && this.fileList[i].response.message != null)
          {
            dz = this.fileList[i].response.message
          }
          else
          {
            dz = this.fileList[i].pathurl
          }

          if (wenjian == '') {
            wenjian = dz
          } else {
            wenjian = wenjian + ',' + dz
          }
        }
        const that = this;
        // 触发表单验证
        this.form.validateFields((err, values) => {
          if (!err) {
            that.confirmLoading = true;
            let httpurl = '';
            let method = '';
            if(!this.model.id){
              httpurl+=this.url.add;
              method = 'post';
            }else{
              httpurl+=this.url.edit;
               method = 'put';
            }
            let formData = Object.assign(this.model, values);
            formData.xgzl = wenjian
            //时间格式化
            
            console.log(formData)
            httpAction(httpurl,formData,method).then((res)=>{
              if(res.success){
                that.$message.success(res.message);
                that.$emit('ok');
              }else{
                that.$message.warning(res.message);
              }
            }).finally(() => {
              that.confirmLoading = false;
              that.close();
            })



          }
        })
      },
      handleCancel () {
        this.close()
      },


    }
  }
</script>

<style lang="less" scoped>

</style>