<template>
  <a-modal
    :title="title"
    :width="800"
    :visible="visible"
    :confirmLoading="confirmLoading"
    :destroyOnClose="destroyOnClose"
    @ok="handleOk"
    @cancel="handleCancel"
    cancelText="关闭">

    <a-spin :spinning="confirmLoading">
      <a-form :form="form">

        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="年度">
          <a-input placeholder="请输入年度" v-decorator="['nd', {}]" :disabled="dis"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="季度">
          <a-select
            showSearch
            placeholder="请选择季度"
            style="width:100%;"
            v-decorator="['sszq', {}]"
            :disabled="dis"
          >
            <a-select-option value="第一季度">第一季度</a-select-option>
            <a-select-option value="第二季度">第二季度</a-select-option>
            <a-select-option value="第三季度">第三季度</a-select-option>
            <a-select-option value="第四季度">第四季度</a-select-option>
          </a-select>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="报告类型">
          <a-input placeholder="请输入报告类型" v-decorator="['bglx', {}]" :disabled="dis"/>
        </a-form-item>
        <a-form-item
          :labelCol="labelCol"
          :wrapperCol="wrapperCol"
          label="相关资料">
          <a-upload-dragger
            name="file"
            :multiple="true"
            action="/jeecg-boot/sys/common/upload?zjhm=hgbg"
            :data="{'isup':1}"
            :defaultFileList="defaultFileList"
            @change="handleChange"
            :disabled="dis"
          >
            <p class="ant-upload-drag-icon">
              <a-icon type="inbox" />
            </p>
            <p class="ant-upload-text">点击或拖拽文件到该区域上传</p>
            <p class="ant-upload-hint">
              支持多文件选择
            </p>
          </a-upload-dragger>
        </a-form-item>

      </a-form>
    </a-spin>
  </a-modal>
</template>

<script>
  import {httpAction} from '@/api/manage'
  import pick from 'lodash.pick'
  import moment from "moment"

  export default {
    name: "DqhgbgbsModal",
    data() {
      return {
        defaultFileList: [
          {
            uid: '1',
            name: 'xxx.png',
            status: 'done',
            url: 'http://www.baidu.com/xxx.png',
          }],
        dis:"disabled",
        fileList: [], //上传文件列表
        destroyOnClose:true,
        title: "操作",
        visible: false,
        model: {},
        labelCol: {
          xs: {span: 24},
          sm: {span: 5},
        },
        wrapperCol: {
          xs: {span: 24},
          sm: {span: 16},
        },

        confirmLoading: false,
        form: this.$form.createForm(this),
        validatorRules: {},
        url: {
          add: "/hg2/dqhgbgbs/add",
          edit: "/hg2/dqhgbgbs/edit",
        },
      }
    },
    created() {
    },
    methods: {
      add() {
        this.edit({});
        this.dis=false
      },
      edit(record) {
        this.dis="disabled"
        this.form.resetFields();
        this.model = Object.assign({}, record);
        this.defaultFileList = [];
        if (record.zdfj != '' && record.zdfj != null) {
          let bxfj = record.zdfj + ''
          let array = bxfj.split(',')
          for (let i = 0; i < array.length; i++) {
            if('' != array[i] && null != array[i])
            {
              this.defaultFileList.push({uid:''+i,status:'done',name:array[i],pathurl:array[i],url:window._CONFIG['domianURL'] + "/" +array[i]})
            }
          }
        }
        this.fileList = this.defaultFileList;
        this.visible = true;
        this.$nextTick(() => {
          this.form.setFieldsValue(pick(this.model, 'nd', 'bglx', 'sszq', 'bmglqk', 'ztjyqk', 'zdzxqk', 'zthgpj', 'jyhyq', 'zdfj'))
          //时间格式化
        });

      },
      close() {
        this.$emit('close');
        this.visible = false;
      },
      handleChange(info) {
        const status = info.file.status;
        if (status !== 'uploading') {
        }
        if (status === 'done') {
          debugger
          this.$message.success(`${info.file.name} 文件上传成功.`);
          for (let i = 0; i < info.fileList.length; i++) {
            if (info.fileList[i].response)
            {
              if(info.fileList[i].response.message)
              {
                if (info.file.response.message == info.fileList[i].response.message)
                {
                  info.fileList[i].url = window._CONFIG['domianURL'] + "/" + info.file.response.message
                  info.fileList[i].pathurl = info.file.response.message
                  break;
                }
              }
            }

          }
        } else if (status === 'error') {
          this.$message.error(`${info.file.name} 文件上传失败.`);
        }

        this.fileList = info.fileList
      },
      handleOk() {

        if (this.title == '查看')
        {
          this.close();
          return;
        }

        let wenjian = ''
        let dz = ''
        for (let i = 0; i < this.fileList.length; i++) {

          if(this.fileList[i].response != null && this.fileList[i].response.message != null)
          {
              dz = this.fileList[i].response.message
          }
          else
          {
             dz = this.fileList[i].pathurl
          }

          if (wenjian == '') {
            wenjian = dz
          } else {
            wenjian = wenjian + ',' + dz
          }
        }

        const that = this;
        // 触发表单验证
        this.form.validateFields((err, values) => {
          if (!err) {
            that.confirmLoading = true;
            let httpurl = '';
            let method = '';
            if (!this.model.id) {
              httpurl += this.url.add;
              method = 'post';
            } else {
              httpurl += this.url.edit;
              method = 'put';
            }
            let formData = Object.assign(this.model, values);
            formData.zdfj = wenjian
            //时间格式化

            console.log(formData)
            httpAction(httpurl, formData, method).then((res) => {
              if (res.success) {
                that.$message.success(res.message);
                that.$emit('ok');
              } else {
                that.$message.warning(res.message);
              }
            }).finally(() => {
              that.confirmLoading = false;
              that.close();
            })


          }
        })
      },
      handleCancel() {
        this.close()
      },


    }
  }
</script>

<style lang="less" scoped>

</style>